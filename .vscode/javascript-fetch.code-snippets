{
	"Получение данных через асинхронную функцию": {
		"prefix": "get-data-async",
		"body": [
			"const API_URL = '';",
			"const LOCATION = '';",
			"",
			"async function getData(url, cbSuccess, cbError) {",
			"\ttry{",
			"\t\tconst response = await fetch(url);",
			"\t\tconst data = await response.json();",
			"",
			"\t\tcbSuccess(data);",
			"\t} catch (error) {",
			"\t\tcbError(error);",
			"\t}",
			"}",
			"",
			"getData(",
			"\tAPI_URL + LOCATION,",
			"",
			"\t(data) => {",
			"\t\tconsole.log(data);",
			"\t}",
			"",
			"\t(error) => {",
			"\t\tconsole.log(error);",
			"\t}",
			")",
		],
	},
	"Fetch try, catch": {
		"prefix": "fetch-try-catch",
		"body": [
			"const URL = '$1';",
			"",
			"fetch(URL)",
			"\t.then((response) => {",
			"\t\treturn response.json();",
			"\t}",
			"\t.then((data) => {",
			"\t\tconsole.log(data);",
			"\t}",
			"catch ((error) => {",
			"\tconsole.log(error);",
			"});",
		],
	},
	"Fetch then": {
		"prefix": "fetch-then",
		"body": [
			"const URL = '$1';",
			"",
			"fetch(URL)",
			"\t.then((response) => {",
			"\t\treturn response.json();",
			"\t}",
			"\t.then((data) => {",
			"\t\tconsole.log(data);",
			"\t}",
			"catch ((error) => {",
			"\tconsole.log(error);",
			"});",
		],
	},
}