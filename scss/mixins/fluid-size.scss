@use "sass:math";

@use "../variables/general";
@use "../variables/grid";
@use "../mixins/units";

// Резиновый размер между min и max значениями на основе viewport
// @param {Number} $min - Минимальное значение (например, 16px)
// @param {Number} $max - Максимальное значение (например, 24px)
// @param {Number} $min-vw [320px] - Минимальная ширина viewport
// @param {Number} $max-vw [1000px] - Максимальная ширина viewport (по умолчанию 1000px)

@mixin fluid-size-px($property, $min, $max, $min-vw-width: grid.$min-screen, $max-vw-width: grid.$container-width) {
	$slope: math.div(($max - $min), ($max-vw-width - $min-vw-width));

	$intercept: $min - $slope * $min-vw-width;

	#{$property}: clamp(#{$min * 1px}, #{$intercept * 1px} + #{$slope * 100vw}, #{$max * 1px});
}

@mixin fluid-size-rem($property, $min, $max, $min-vw-width: grid.$min-screen, $max-vw-width: grid.$container-width) {
	$min-size: math.div($min, general.$fz);
	$max-size: math.div($max, general.$fz);
	$min-width: math.div($min-vw-width, general.$fz);
	$max-width: math.div($max-vw-width, general.$fz);

	$slope: math.div(($max-size - $min-size), ($max-width - $min-width));

	$intercept: $min-size - $slope * $min-width;

	#{$property}: clamp(#{$min-size * 1rem}, #{$intercept * 1rem} + #{$slope * 100vw}, #{$max-size * 1rem});
}